[adaptive_bed_mesh]
# Required subsystem dependencies: ensure these sections appear earlier in the
# configuration so the adaptive module can resolve them during startup.
#   [exclude_object]
#   [print_stats]
#   [bed_mesh]
#   [virtual_sdcard]

# When debug_mode is false (default) any error will abort the command instead of
# falling back to the default bed mesh silently. Enable to keep probing even if
# boundary detection fails.
debug_mode: False

# Allow the module to reuse the slicer-provided `AREA_START`/`AREA_END`
# parameters when they are available, fall back to exclude_object and gcode
# parsing otherwise. Disable individual detection passes here if they cause
# issues in your workflow.
disable_slicer_min_max_boundary_detection: False
disable_exclude_object_boundary_detection: False
disable_gcode_analysis_boundary_detection: False

# Limit the spacing between generated probe points. Reduce these values to force
# denser probing over long spans, or increase if the probing grid grows too large.
max_probe_horizontal_distance: 50.0
max_probe_vertical_distance: 50.0

# Extra clearance around the detected print area before clamping to the
# underlying [bed_mesh] limits. Increase slightly if prints run close to the
# detected perimeter.
mesh_area_clearance: 5.0

# Choose whether to hand control of the reference point to BED_MESH_CALIBRATE.
# When False, the module sets bed_mesh.Zero_ref_pos so a fixed probe location is
# used. When True, the command passes RELATIVE_REFERENCE_INDEX instead.
use_relative_reference_index: False

# Number of interpolated segments used when an arc move is decoded from the
# gcode analyzer. Leave at the default unless you see jagged boundaries.
arc_segments: 80

# The module requires [virtual_sdcard] path to locate gcode files; this example
# matches printer_k3c_k3v2c.cfg. Adjust if your printers store gcode elsewhere.
# virtual_sdcard.path: /useremain/app/gk/gcodes/
